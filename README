Assignment:     Project 1
Student:        Connor Zanin

Notes:

ARCHITECTURE
        `main.c` is meant to act as a client to the multicast service.
        The main body of the service is implemented in `channel.c`.

        The channel has four main interface functions:
        * ch_init() - initialize socket, datastructures
        * ch_fini() - cleanup
        * ch_send(int) - multicast an int
        * ch_recv(int*) - attempt to receive(deliver) a message from the channel

        `queue.*` is a generic queue implementation with sorting and searching

DEBUGGING
	When moving to four nodes, I noticed that initially the messages were sent quickly, but would slow over time.
	Initially I thought this was a symptom of the back-off congestion control.
	After reducing the back-off rate to 1.1, the problem persisted.
	I employed gprof.
	My guess was that frequent invocations of a quicksort function that didn't check for the sorted property were to blame.
	I was correct, and the gprof file can be found in `debugging/sorting.gprof`.

        The problem comes because I need to sort the queue by two comparator functions.
        I could remedy this problem by maintaining two separate queues.
        Delivering multiple messages at once also seems to rememdy the problem as the hold-back queue is drained faster which reduces the number of calls to `q_sort` as well as the size of the queue.

CHECKPOINTING
        Checkpointing in my system is handled by the same system that sends data messages.
        First, the markers are sent out.
        The initiator waits for all acks, and does retransmissions according to timeouts.
        A recipient of a marker only takes one checkpoint per intitiator and checkpoint id.
        A vector clock is maintained by each recipient that keeps track of the latest checkpoint request from each initiator.

        A checkpoint is not guaranteed to be consistent.
        However, my system is resilient to packet loss, duplication, and reodering.
        If a node receives a data message with a lower msg_id than what it has seen for a particular sender, the message is discarded.
